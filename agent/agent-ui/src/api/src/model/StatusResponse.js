/**
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessDetail from './AccessDetail';
import ShareDetail from './ShareDetail';

/**
 * The StatusResponse model module.
 * @module model/StatusResponse
 * @version version not set
 */
class StatusResponse {
    /**
     * Constructs a new <code>StatusResponse</code>.
     * @alias module:model/StatusResponse
     */
    constructor() { 
        
        StatusResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatusResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusResponse} obj Optional instance to populate.
     * @return {module:model/StatusResponse} The populated <code>StatusResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusResponse();

            if (data.hasOwnProperty('accesses')) {
                obj['accesses'] = ApiClient.convertToType(data['accesses'], [AccessDetail]);
            }
            if (data.hasOwnProperty('shares')) {
                obj['shares'] = ApiClient.convertToType(data['shares'], [ShareDetail]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusResponse</code>.
     */
    static validateJSON(data) {
        if (data['accesses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accesses'])) {
                throw new Error("Expected the field `accesses` to be an array in the JSON data but got " + data['accesses']);
            }
            // validate the optional field `accesses` (array)
            for (const item of data['accesses']) {
                AccessDetail.validateJSON(item);
            };
        }
        if (data['shares']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['shares'])) {
                throw new Error("Expected the field `shares` to be an array in the JSON data but got " + data['shares']);
            }
            // validate the optional field `shares` (array)
            for (const item of data['shares']) {
                ShareDetail.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AccessDetail>} accesses
 */
StatusResponse.prototype['accesses'] = undefined;

/**
 * @member {Array.<module:model/ShareDetail>} shares
 */
StatusResponse.prototype['shares'] = undefined;






export default StatusResponse;

