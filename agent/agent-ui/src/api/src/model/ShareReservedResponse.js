/**
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShareReservedResponse model module.
 * @module model/ShareReservedResponse
 * @version version not set
 */
class ShareReservedResponse {
    /**
     * Constructs a new <code>ShareReservedResponse</code>.
     * @alias module:model/ShareReservedResponse
     */
    constructor() { 
        
        ShareReservedResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShareReservedResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareReservedResponse} obj Optional instance to populate.
     * @return {module:model/ShareReservedResponse} The populated <code>ShareReservedResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareReservedResponse();

            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('backendMode')) {
                obj['backendMode'] = ApiClient.convertToType(data['backendMode'], 'String');
            }
            if (data.hasOwnProperty('shareMode')) {
                obj['shareMode'] = ApiClient.convertToType(data['shareMode'], 'String');
            }
            if (data.hasOwnProperty('frontendEndpoints')) {
                obj['frontendEndpoints'] = ApiClient.convertToType(data['frontendEndpoints'], ['String']);
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareReservedResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareReservedResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['backendMode'] && !(typeof data['backendMode'] === 'string' || data['backendMode'] instanceof String)) {
            throw new Error("Expected the field `backendMode` to be a primitive type in the JSON string but got " + data['backendMode']);
        }
        // ensure the json data is a string
        if (data['shareMode'] && !(typeof data['shareMode'] === 'string' || data['shareMode'] instanceof String)) {
            throw new Error("Expected the field `shareMode` to be a primitive type in the JSON string but got " + data['shareMode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['frontendEndpoints'])) {
            throw new Error("Expected the field `frontendEndpoints` to be an array in the JSON data but got " + data['frontendEndpoints']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }

        return true;
    }


}



/**
 * @member {String} token
 */
ShareReservedResponse.prototype['token'] = undefined;

/**
 * @member {String} backendMode
 */
ShareReservedResponse.prototype['backendMode'] = undefined;

/**
 * @member {String} shareMode
 */
ShareReservedResponse.prototype['shareMode'] = undefined;

/**
 * @member {Array.<String>} frontendEndpoints
 */
ShareReservedResponse.prototype['frontendEndpoints'] = undefined;

/**
 * @member {String} target
 */
ShareReservedResponse.prototype['target'] = undefined;






export default ShareReservedResponse;

