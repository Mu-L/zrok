/*
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.51
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgentagentGrpcagentproto);
  }
}(this, function(expect, AgentagentGrpcagentproto) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ShareDetail', function() {
      beforeEach(function() {
        instance = new AgentagentGrpcagentproto.ShareDetail();
      });

      it('should create an instance of ShareDetail', function() {
        // TODO: update the code to test ShareDetail
        expect(instance).to.be.a(AgentagentGrpcagentproto.ShareDetail);
      });

      it('should have the property token (base name: "token")', function() {
        // TODO: update the code to test the property token
        expect(instance).to.have.property('token');
        // expect(instance.token).to.be(expectedValueLiteral);
      });

      it('should have the property shareMode (base name: "shareMode")', function() {
        // TODO: update the code to test the property shareMode
        expect(instance).to.have.property('shareMode');
        // expect(instance.shareMode).to.be(expectedValueLiteral);
      });

      it('should have the property backendMode (base name: "backendMode")', function() {
        // TODO: update the code to test the property backendMode
        expect(instance).to.have.property('backendMode');
        // expect(instance.backendMode).to.be(expectedValueLiteral);
      });

      it('should have the property reserved (base name: "reserved")', function() {
        // TODO: update the code to test the property reserved
        expect(instance).to.have.property('reserved');
        // expect(instance.reserved).to.be(expectedValueLiteral);
      });

      it('should have the property frontendEndpoint (base name: "frontendEndpoint")', function() {
        // TODO: update the code to test the property frontendEndpoint
        expect(instance).to.have.property('frontendEndpoint');
        // expect(instance.frontendEndpoint).to.be(expectedValueLiteral);
      });

      it('should have the property backendEndpoint (base name: "backendEndpoint")', function() {
        // TODO: update the code to test the property backendEndpoint
        expect(instance).to.have.property('backendEndpoint');
        // expect(instance.backendEndpoint).to.be(expectedValueLiteral);
      });

      it('should have the property closed (base name: "closed")', function() {
        // TODO: update the code to test the property closed
        expect(instance).to.have.property('closed');
        // expect(instance.closed).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

    });
  });

}));
