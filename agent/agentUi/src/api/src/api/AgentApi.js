/**
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccessPrivateResponse from '../model/AccessPrivateResponse';
import RpcStatus from '../model/RpcStatus';
import SharePrivateResponse from '../model/SharePrivateResponse';
import SharePublicResponse from '../model/SharePublicResponse';
import StatusResponse from '../model/StatusResponse';
import VersionResponse from '../model/VersionResponse';

/**
* Agent service.
* @module api/AgentApi
* @version version not set
*/
export default class AgentApi {

    /**
    * Constructs a new AgentApi. 
    * @alias module:api/AgentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the agentAccessPrivate operation.
     * @callback module:api/AgentApi~agentAccessPrivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccessPrivateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [token] 
     * @param {String} [bindAddress] 
     * @param {Array.<String>} [responseHeaders] 
     * @param {module:api/AgentApi~agentAccessPrivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccessPrivateResponse}
     */
    agentAccessPrivate(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'token': opts['token'],
        'bindAddress': opts['bindAddress'],
        'responseHeaders': this.apiClient.buildCollectionParam(opts['responseHeaders'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccessPrivateResponse;
      return this.apiClient.callApi(
        '/v1/agent/accessPrivate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentReleaseAccess operation.
     * @callback module:api/AgentApi~agentReleaseAccessCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [frontendToken] 
     * @param {module:api/AgentApi~agentReleaseAccessCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    agentReleaseAccess(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'frontendToken': opts['frontendToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/agent/releaseAccess', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentReleaseShare operation.
     * @callback module:api/AgentApi~agentReleaseShareCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [token] 
     * @param {module:api/AgentApi~agentReleaseShareCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    agentReleaseShare(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'token': opts['token']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/agent/releaseShare', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentSharePrivate operation.
     * @callback module:api/AgentApi~agentSharePrivateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharePrivateResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [target] 
     * @param {String} [backendMode] 
     * @param {Boolean} [insecure] 
     * @param {Boolean} [closed] 
     * @param {Array.<String>} [accessGrants] 
     * @param {module:api/AgentApi~agentSharePrivateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharePrivateResponse}
     */
    agentSharePrivate(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'target': opts['target'],
        'backendMode': opts['backendMode'],
        'insecure': opts['insecure'],
        'closed': opts['closed'],
        'accessGrants': this.apiClient.buildCollectionParam(opts['accessGrants'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SharePrivateResponse;
      return this.apiClient.callApi(
        '/v1/agent/sharePrivate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentSharePublic operation.
     * @callback module:api/AgentApi~agentSharePublicCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SharePublicResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [target] 
     * @param {Array.<String>} [basicAuth] 
     * @param {Array.<String>} [frontendSelection] 
     * @param {String} [backendMode] 
     * @param {Boolean} [insecure] 
     * @param {String} [oauthProvider] 
     * @param {Array.<String>} [oauthEmailAddressPatterns] 
     * @param {String} [oauthCheckInterval] 
     * @param {Boolean} [closed] 
     * @param {Array.<String>} [accessGrants] 
     * @param {module:api/AgentApi~agentSharePublicCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SharePublicResponse}
     */
    agentSharePublic(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'target': opts['target'],
        'basicAuth': this.apiClient.buildCollectionParam(opts['basicAuth'], 'multi'),
        'frontendSelection': this.apiClient.buildCollectionParam(opts['frontendSelection'], 'multi'),
        'backendMode': opts['backendMode'],
        'insecure': opts['insecure'],
        'oauthProvider': opts['oauthProvider'],
        'oauthEmailAddressPatterns': this.apiClient.buildCollectionParam(opts['oauthEmailAddressPatterns'], 'multi'),
        'oauthCheckInterval': opts['oauthCheckInterval'],
        'closed': opts['closed'],
        'accessGrants': this.apiClient.buildCollectionParam(opts['accessGrants'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SharePublicResponse;
      return this.apiClient.callApi(
        '/v1/agent/sharePublic', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentStatus operation.
     * @callback module:api/AgentApi~agentStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AgentApi~agentStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StatusResponse}
     */
    agentStatus(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = StatusResponse;
      return this.apiClient.callApi(
        '/v1/agent/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the agentVersion operation.
     * @callback module:api/AgentApi~agentVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VersionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AgentApi~agentVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VersionResponse}
     */
    agentVersion(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VersionResponse;
      return this.apiClient.callApi(
        '/v1/agent/version', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
