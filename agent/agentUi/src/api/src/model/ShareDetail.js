/**
 * agent/agentGrpc/agent.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShareDetail model module.
 * @module model/ShareDetail
 * @version version not set
 */
class ShareDetail {
    /**
     * Constructs a new <code>ShareDetail</code>.
     * @alias module:model/ShareDetail
     */
    constructor() { 
        
        ShareDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShareDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShareDetail} obj Optional instance to populate.
     * @return {module:model/ShareDetail} The populated <code>ShareDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShareDetail();

            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('shareMode')) {
                obj['shareMode'] = ApiClient.convertToType(data['shareMode'], 'String');
            }
            if (data.hasOwnProperty('backendMode')) {
                obj['backendMode'] = ApiClient.convertToType(data['backendMode'], 'String');
            }
            if (data.hasOwnProperty('reserved')) {
                obj['reserved'] = ApiClient.convertToType(data['reserved'], 'Boolean');
            }
            if (data.hasOwnProperty('frontendEndpoint')) {
                obj['frontendEndpoint'] = ApiClient.convertToType(data['frontendEndpoint'], ['String']);
            }
            if (data.hasOwnProperty('backendEndpoint')) {
                obj['backendEndpoint'] = ApiClient.convertToType(data['backendEndpoint'], 'String');
            }
            if (data.hasOwnProperty('closed')) {
                obj['closed'] = ApiClient.convertToType(data['closed'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShareDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShareDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['shareMode'] && !(typeof data['shareMode'] === 'string' || data['shareMode'] instanceof String)) {
            throw new Error("Expected the field `shareMode` to be a primitive type in the JSON string but got " + data['shareMode']);
        }
        // ensure the json data is a string
        if (data['backendMode'] && !(typeof data['backendMode'] === 'string' || data['backendMode'] instanceof String)) {
            throw new Error("Expected the field `backendMode` to be a primitive type in the JSON string but got " + data['backendMode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['frontendEndpoint'])) {
            throw new Error("Expected the field `frontendEndpoint` to be an array in the JSON data but got " + data['frontendEndpoint']);
        }
        // ensure the json data is a string
        if (data['backendEndpoint'] && !(typeof data['backendEndpoint'] === 'string' || data['backendEndpoint'] instanceof String)) {
            throw new Error("Expected the field `backendEndpoint` to be a primitive type in the JSON string but got " + data['backendEndpoint']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {String} token
 */
ShareDetail.prototype['token'] = undefined;

/**
 * @member {String} shareMode
 */
ShareDetail.prototype['shareMode'] = undefined;

/**
 * @member {String} backendMode
 */
ShareDetail.prototype['backendMode'] = undefined;

/**
 * @member {Boolean} reserved
 */
ShareDetail.prototype['reserved'] = undefined;

/**
 * @member {Array.<String>} frontendEndpoint
 */
ShareDetail.prototype['frontendEndpoint'] = undefined;

/**
 * @member {String} backendEndpoint
 */
ShareDetail.prototype['backendEndpoint'] = undefined;

/**
 * @member {Boolean} closed
 */
ShareDetail.prototype['closed'] = undefined;

/**
 * @member {String} status
 */
ShareDetail.prototype['status'] = undefined;






export default ShareDetail;

