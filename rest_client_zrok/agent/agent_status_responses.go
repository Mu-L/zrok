// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/openziti/zrok/rest_model_zrok"
)

// AgentStatusReader is a Reader for the AgentStatus structure.
type AgentStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAgentStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAgentStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/status] agentStatus", response, response.Code())
	}
}

// NewAgentStatusOK creates a AgentStatusOK with default headers values
func NewAgentStatusOK() *AgentStatusOK {
	return &AgentStatusOK{}
}

/*
AgentStatusOK describes a response with status code 200, with default header values.

ok
*/
type AgentStatusOK struct {
	Payload *AgentStatusOKBody
}

// IsSuccess returns true when this agent status o k response has a 2xx status code
func (o *AgentStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this agent status o k response has a 3xx status code
func (o *AgentStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this agent status o k response has a 4xx status code
func (o *AgentStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this agent status o k response has a 5xx status code
func (o *AgentStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this agent status o k response a status code equal to that given
func (o *AgentStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the agent status o k response
func (o *AgentStatusOK) Code() int {
	return 200
}

func (o *AgentStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusOK %s", 200, payload)
}

func (o *AgentStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusOK %s", 200, payload)
}

func (o *AgentStatusOK) GetPayload() *AgentStatusOKBody {
	return o.Payload
}

func (o *AgentStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentStatusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentStatusUnauthorized creates a AgentStatusUnauthorized with default headers values
func NewAgentStatusUnauthorized() *AgentStatusUnauthorized {
	return &AgentStatusUnauthorized{}
}

/*
AgentStatusUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type AgentStatusUnauthorized struct {
}

// IsSuccess returns true when this agent status unauthorized response has a 2xx status code
func (o *AgentStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this agent status unauthorized response has a 3xx status code
func (o *AgentStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this agent status unauthorized response has a 4xx status code
func (o *AgentStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this agent status unauthorized response has a 5xx status code
func (o *AgentStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this agent status unauthorized response a status code equal to that given
func (o *AgentStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the agent status unauthorized response
func (o *AgentStatusUnauthorized) Code() int {
	return 401
}

func (o *AgentStatusUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusUnauthorized", 401)
}

func (o *AgentStatusUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusUnauthorized", 401)
}

func (o *AgentStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAgentStatusInternalServerError creates a AgentStatusInternalServerError with default headers values
func NewAgentStatusInternalServerError() *AgentStatusInternalServerError {
	return &AgentStatusInternalServerError{}
}

/*
AgentStatusInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type AgentStatusInternalServerError struct {
}

// IsSuccess returns true when this agent status internal server error response has a 2xx status code
func (o *AgentStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this agent status internal server error response has a 3xx status code
func (o *AgentStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this agent status internal server error response has a 4xx status code
func (o *AgentStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this agent status internal server error response has a 5xx status code
func (o *AgentStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this agent status internal server error response a status code equal to that given
func (o *AgentStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the agent status internal server error response
func (o *AgentStatusInternalServerError) Code() int {
	return 500
}

func (o *AgentStatusInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusInternalServerError", 500)
}

func (o *AgentStatusInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/status][%d] agentStatusInternalServerError", 500)
}

func (o *AgentStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
AgentStatusBody agent status body
swagger:model AgentStatusBody
*/
type AgentStatusBody struct {

	// env z Id
	EnvZID string `json:"envZId,omitempty"`
}

// Validate validates this agent status body
func (o *AgentStatusBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this agent status body based on context it is used
func (o *AgentStatusBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentStatusBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentStatusBody) UnmarshalBinary(b []byte) error {
	var res AgentStatusBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
AgentStatusOKBody agent status o k body
swagger:model AgentStatusOKBody
*/
type AgentStatusOKBody struct {

	// shares
	Shares []*rest_model_zrok.Share `json:"shares"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this agent status o k body
func (o *AgentStatusOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateShares(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentStatusOKBody) validateShares(formats strfmt.Registry) error {
	if swag.IsZero(o.Shares) { // not required
		return nil
	}

	for i := 0; i < len(o.Shares); i++ {
		if swag.IsZero(o.Shares[i]) { // not required
			continue
		}

		if o.Shares[i] != nil {
			if err := o.Shares[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("agentStatusOK" + "." + "shares" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("agentStatusOK" + "." + "shares" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this agent status o k body based on the context it is used
func (o *AgentStatusOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateShares(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentStatusOKBody) contextValidateShares(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Shares); i++ {

		if o.Shares[i] != nil {

			if swag.IsZero(o.Shares[i]) { // not required
				return nil
			}

			if err := o.Shares[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("agentStatusOK" + "." + "shares" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("agentStatusOK" + "." + "shares" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentStatusOKBody) UnmarshalBinary(b []byte) error {
	var res AgentStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
