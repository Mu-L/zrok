// Code generated by go-swagger; DO NOT EDIT.

package agent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HTTPHealthcheckReader is a Reader for the HTTPHealthcheck structure.
type HTTPHealthcheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HTTPHealthcheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHTTPHealthcheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHTTPHealthcheckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHTTPHealthcheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewHTTPHealthcheckBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /agent/share/http-healthcheck] httpHealthcheck", response, response.Code())
	}
}

// NewHTTPHealthcheckOK creates a HTTPHealthcheckOK with default headers values
func NewHTTPHealthcheckOK() *HTTPHealthcheckOK {
	return &HTTPHealthcheckOK{}
}

/*
HTTPHealthcheckOK describes a response with status code 200, with default header values.

ok
*/
type HTTPHealthcheckOK struct {
	Payload *HTTPHealthcheckOKBody
}

// IsSuccess returns true when this http healthcheck o k response has a 2xx status code
func (o *HTTPHealthcheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this http healthcheck o k response has a 3xx status code
func (o *HTTPHealthcheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this http healthcheck o k response has a 4xx status code
func (o *HTTPHealthcheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this http healthcheck o k response has a 5xx status code
func (o *HTTPHealthcheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this http healthcheck o k response a status code equal to that given
func (o *HTTPHealthcheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the http healthcheck o k response
func (o *HTTPHealthcheckOK) Code() int {
	return 200
}

func (o *HTTPHealthcheckOK) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckOK  %+v", 200, o.Payload)
}

func (o *HTTPHealthcheckOK) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckOK  %+v", 200, o.Payload)
}

func (o *HTTPHealthcheckOK) GetPayload() *HTTPHealthcheckOKBody {
	return o.Payload
}

func (o *HTTPHealthcheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(HTTPHealthcheckOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHTTPHealthcheckUnauthorized creates a HTTPHealthcheckUnauthorized with default headers values
func NewHTTPHealthcheckUnauthorized() *HTTPHealthcheckUnauthorized {
	return &HTTPHealthcheckUnauthorized{}
}

/*
HTTPHealthcheckUnauthorized describes a response with status code 401, with default header values.

unauthorized
*/
type HTTPHealthcheckUnauthorized struct {
}

// IsSuccess returns true when this http healthcheck unauthorized response has a 2xx status code
func (o *HTTPHealthcheckUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this http healthcheck unauthorized response has a 3xx status code
func (o *HTTPHealthcheckUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this http healthcheck unauthorized response has a 4xx status code
func (o *HTTPHealthcheckUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this http healthcheck unauthorized response has a 5xx status code
func (o *HTTPHealthcheckUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this http healthcheck unauthorized response a status code equal to that given
func (o *HTTPHealthcheckUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the http healthcheck unauthorized response
func (o *HTTPHealthcheckUnauthorized) Code() int {
	return 401
}

func (o *HTTPHealthcheckUnauthorized) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckUnauthorized ", 401)
}

func (o *HTTPHealthcheckUnauthorized) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckUnauthorized ", 401)
}

func (o *HTTPHealthcheckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHTTPHealthcheckInternalServerError creates a HTTPHealthcheckInternalServerError with default headers values
func NewHTTPHealthcheckInternalServerError() *HTTPHealthcheckInternalServerError {
	return &HTTPHealthcheckInternalServerError{}
}

/*
HTTPHealthcheckInternalServerError describes a response with status code 500, with default header values.

internal server error
*/
type HTTPHealthcheckInternalServerError struct {
}

// IsSuccess returns true when this http healthcheck internal server error response has a 2xx status code
func (o *HTTPHealthcheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this http healthcheck internal server error response has a 3xx status code
func (o *HTTPHealthcheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this http healthcheck internal server error response has a 4xx status code
func (o *HTTPHealthcheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this http healthcheck internal server error response has a 5xx status code
func (o *HTTPHealthcheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this http healthcheck internal server error response a status code equal to that given
func (o *HTTPHealthcheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the http healthcheck internal server error response
func (o *HTTPHealthcheckInternalServerError) Code() int {
	return 500
}

func (o *HTTPHealthcheckInternalServerError) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckInternalServerError ", 500)
}

func (o *HTTPHealthcheckInternalServerError) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckInternalServerError ", 500)
}

func (o *HTTPHealthcheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHTTPHealthcheckBadGateway creates a HTTPHealthcheckBadGateway with default headers values
func NewHTTPHealthcheckBadGateway() *HTTPHealthcheckBadGateway {
	return &HTTPHealthcheckBadGateway{}
}

/*
HTTPHealthcheckBadGateway describes a response with status code 502, with default header values.

bad gateway; agent not reachable
*/
type HTTPHealthcheckBadGateway struct {
}

// IsSuccess returns true when this http healthcheck bad gateway response has a 2xx status code
func (o *HTTPHealthcheckBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this http healthcheck bad gateway response has a 3xx status code
func (o *HTTPHealthcheckBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this http healthcheck bad gateway response has a 4xx status code
func (o *HTTPHealthcheckBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this http healthcheck bad gateway response has a 5xx status code
func (o *HTTPHealthcheckBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this http healthcheck bad gateway response a status code equal to that given
func (o *HTTPHealthcheckBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the http healthcheck bad gateway response
func (o *HTTPHealthcheckBadGateway) Code() int {
	return 502
}

func (o *HTTPHealthcheckBadGateway) Error() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckBadGateway ", 502)
}

func (o *HTTPHealthcheckBadGateway) String() string {
	return fmt.Sprintf("[POST /agent/share/http-healthcheck][%d] httpHealthcheckBadGateway ", 502)
}

func (o *HTTPHealthcheckBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
HTTPHealthcheckBody HTTP healthcheck body
swagger:model HTTPHealthcheckBody
*/
type HTTPHealthcheckBody struct {

	// endpoint
	Endpoint string `json:"endpoint,omitempty"`

	// env z Id
	EnvZID string `json:"envZId,omitempty"`

	// expected Http response
	ExpectedHTTPResponse float64 `json:"expectedHttpResponse,omitempty"`

	// http verb
	HTTPVerb string `json:"httpVerb,omitempty"`

	// share token
	ShareToken string `json:"shareToken,omitempty"`

	// timeout ms
	TimeoutMs float64 `json:"timeoutMs,omitempty"`
}

// Validate validates this HTTP healthcheck body
func (o *HTTPHealthcheckBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this HTTP healthcheck body based on context it is used
func (o *HTTPHealthcheckBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *HTTPHealthcheckBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *HTTPHealthcheckBody) UnmarshalBinary(b []byte) error {
	var res HTTPHealthcheckBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
HTTPHealthcheckOKBody HTTP healthcheck o k body
swagger:model HTTPHealthcheckOKBody
*/
type HTTPHealthcheckOKBody struct {

	// error
	Error string `json:"error,omitempty"`

	// healthy
	Healthy bool `json:"healthy,omitempty"`
}

// Validate validates this HTTP healthcheck o k body
func (o *HTTPHealthcheckOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this HTTP healthcheck o k body based on context it is used
func (o *HTTPHealthcheckOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *HTTPHealthcheckOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *HTTPHealthcheckOKBody) UnmarshalBinary(b []byte) error {
	var res HTTPHealthcheckOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
